# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx1536m
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 org.gradle.parallel=true


#The Android Gradle plugin version 3.1.0-alpha06 includes a new data binding compiler that generates the binding classes. The new compiler incrementally creates the binding classes, which in most cases speeds up the build process. To learn more about the binding classes, see Generated binding classes.
#Previous versions of the data binding compiler generated the binding classes in the same step that compiles your managed code. If your managed code fails to compile, you might get multiple errors reporting that the binding classes aren't found. The new data binding compiler prevents these errors by generating the binding classes before the managed compiler builds your app.
#To enable the new data binding compiler, add the following option to your gradle.properties file:
android.databinding.enableV2=true
#The following behavior changes apply when you enable the new data binding compiler:
#
#The Android Gradle plugin generates binding classes for your layouts before compiling your managed code.
#If a layout is included in more than one target resource configuration,
# the data binding library uses android.view.View as the default view type for all views
# that share the same resource id but not view type.
#Binding classes for library modules are compiled and packaged into the corresponding
# Android Archive (AAR) file. App modules that depend on those library modules no longer
# need to regenerate the binding classes. For more information about AAR files, see Create an Android Library.
#A module¡¯s binding adapters can no longer change the behavior of adapters of the module¡¯s
# dependencies. Binding adapters only affect code in its own module and consumers of the module.